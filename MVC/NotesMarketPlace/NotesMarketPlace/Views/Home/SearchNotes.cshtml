
@model IEnumerable<NotesMarketPlace.Models.SearchNotesModel>

@{
    ViewBag.Title = "SearchNotes";
    Layout = "~/Views/Shared/_ClientLayout.cshtml";
}

<style>
    .filter-search .form-control {
        padding-left: 2.375rem;
        margin-right: 10px;
    }

    .filter-search .form-control-feedback {
        display: block;
        width: 1.375rem;
        height: 1.375rem;
        line-height: 1.375rem;
        text-align: center;
        pointer-events: none;
        color: #aaa;
    }

    .filter-search img {
        position: absolute;
        top: 7px;
        left: 9px;
    }

    /*    ratings     */

    .rate {
        float: left;
        padding: 0 1px;
    }

        .rate:not(:checked) > input {
            position: absolute;
            top: -9999px;
        }

        .rate:not(:checked) > label {
            float: right;
            width: 1em;
            overflow: hidden;
            white-space: nowrap;
            cursor: pointer;
            font-size: 25px;
            color: #ccc;
        }

            .rate:not(:checked) > label:before {
                content: '★ ';
            }

        .rate > input:checked ~ label {
            color: #ffc700;
        }

    .ratings p {
        font-size: 16px;
        font-weight: 400;
        line-height: 20px;
        color: #333333;
        position: relative;
        top: 8px;
        left: 5px;
    }

    .customDropDown-Multiple {
        padding-right: 40px !important;
        background: url(../../Content/images/arrow-down.png) 90% no-repeat;
        margin-right: 10px;
    }
</style>

<!-- Head -->
<section class="head">
    <div class="head-content">
        <div class="container">
            <div class="row">
                <div class="head-content-inner">
                    <div class="head-heading">
                        Search Notes
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- End Head -->
<!-- Search  -->
<section class="container">
    <div class="row">
        <div class="col-md-12">
            <h1 class="title">Search and Filter notes</h1>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            @using (Html.BeginForm("SearchNotes", "Home", FormMethod.Post))
            {
                <div class="row">
                    <div class="col-md-12">
                        <div class="filter-search">
                            <img src="~/Content/images/search-icon.png" alt="search" class="form-control-feedback">
                            <input id="Search" class="form-control input-search" placeholder="Search notes here...">
                        </div>
                    </div>
                </div>
            }
            <div class="row">
                <div class="col-md-2 col-sm-6">
                    @Html.DropDownList("Type", new SelectList(ViewBag.TypeList, "NoteTypesID", "Name"), "Select Type", new { @class = "form-control customDropDown-Multiple", onchange = "myFunc(this)" })
                </div>
                <div class="col-md-2 col-sm-6">
                    @Html.DropDownList("Category", new SelectList(ViewBag.CategoryList, "NoteCategoriesID", "Name"), "Select Category", new { @class = "form-control customDropDown-Multiple", onchange = "myFunc(this)" })
                </div>
                <div class="col-md-2 col-sm-6">
                    @Html.DropDownList("University", new SelectList(ViewBag.University), "Select University", new { @class = "form-control customDropDown-Multiple", onchange = "myFunc(this)" })

                </div>
                <div class="col-md-2 col-sm-6">
                    @Html.DropDownList("Course", new SelectList(ViewBag.Course), "Select Course", new { @class = "form-control customDropDown-Multiple", onchange = "myFunc(this)" })

                </div>
                <div class="col-md-2 col-sm-6">
                    @Html.DropDownList("Country", new SelectList(ViewBag.Country, "CountriesID", "Name"), "Select Country", new { @class = "form-control customDropDown-Multiple", onchange = "myFunc(this)" })
                </div>
                <div class="col-md-2 col-sm-6">
                    <select class="form-control customDropDown-Multiple" id="Rating" onchange="myFunc(this)">
                        <option value="">Select rating</option>
                        <option value="1">1 +</option>
                        <option value="2">2 +</option>
                        <option value="3">3 +</option>
                        <option value="4">4 +</option>
                        <option value="5">5 +</option>
                    </select>
                </div>
            </div>
        </div>
    </div><div class="row">
        <div class="col-md-12">
            <h1 class="title">Total @ViewBag.TotalNotes notes</h1>
        </div>
    </div><div class="row row-cols-1 row-cols-md-3">
        @foreach (var item in Model)
        {
            <div class="col mb-4 note-title">
                <div class="card">
                    <img src="@Url.Content(item.DisplayPicture)" class="card-img-top" alt="note-image">
                    <div class="card-body">
                        <div class="card-title">
                            @Html.ActionLink(item.Title, "NoteDetails", new { id = @item.SellerNotesID }, htmlAttributes: new { style = "color: #6655a5; cursor : pointer;", datatoggle = "tooltip", dataplacement = "bottom", dataoriginaltitle = "Title" })
                            @*<a id="noteTitle" href="">
                                    @Html.DisplayFor(modelItem => item.Title)
                                </a>*@
                        </div>
                        <div class="card-text">
                            <div class="card-content">
                                <span class="icon-images">
                                    <img src="~/Content/images/university.png" alt="images">
                                </span>
                                <span class="span-content" data-toggle="tooltip" data-placement="bottom" data-original-title="University">
                                    @Html.DisplayFor(modelItem => item.UniversityName)
                                </span>
                            </div>
                            <div class="card-content">
                                <span class="icon-images">
                                    <img src="~/Content/images/pages.png" alt="images">
                                </span>
                                <span class="span-content" data-toggle="tooltip" data-placement="bottom" data-original-title="Pages">
                                    @Html.DisplayFor(modelItem => item.NumberOfPages)
                                </span>
                            </div>
                            <div class="card-content">
                                <span class="icon-images">
                                    <img src="~/Content/images/date.png" alt="images">
                                </span>
                                <span class="span-content" data-toggle="tooltip" data-placement="bottom" data-original-title="Published Date">
                                    @item.PublishedDate.Value.ToString("dd/MM/yyyy")
                                </span>
                            </div>
                            <div class="card-content">
                                <span class="icon-images">
                                    <img src="~/Content/images/flag.png" alt="images">
                                </span>
                                <span class="span-content text-danger">
                                    @(item.TotalSpams) Users marked this note as inappropriate
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer bg-transparent ratings">
                        <div class="rate">

                            @{
                                for (int j = 5; j > 0; j--)
                                {
                                    if (j == item.Reviews)
                                    {
                                        <input type="radio" name="bookrate @item.SellerNotesID" value="@j" checked /><label></label>
                                    }
                                    else
                                    {
                                        <input type="radio" name="bookrate @item.SellerNotesID" value="@j" /><label></label>
                                    }

                                }
                            }
                        </div>
                        @(item.TotalReviews) reviews
                    </div>
                </div>
            </div>
        }
    </div>

    @* Pagination *@
    @{
        double totalPages = ViewBag.TotalPages;

        <div class="row text-center">
            <div class="col-md-12 num">
                <ul class="pagination justify-content-center">

                    @if (ViewBag.PageNumber == 1)
                    {
                        <li class="page-item">
                            <a class="page-link" aria-label="Previous" href="@Url.Action("SearchNotes", new { PageNumber = ViewBag.PageNumber })">
                                <img src="~/Content/images/left-arrow.png" alt="left-arrow">
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item">
                            <a class="page-link" aria-label="Previous" href="@Url.Action("SearchNotes", new { PageNumber = ViewBag.PageNumber - 1 })">
                                <img src="~/Content/images/left-arrow.png" alt="left-arrow">
                            </a>
                        </li>
                    }

                    @for (int i = 1; i <= totalPages; i++)
                    {
                        if (i == ViewBag.PageNumber)
                        {
                            <li class="page-item">
                                @Html.ActionLink(i.ToString(), "SearchNotes", new { PageNumber = i }, htmlAttributes: new { @class = "page-link active" })
                            </li>
                        }
                        else
                        {
                            <li class="page-item">
                                @Html.ActionLink(i.ToString(), "SearchNotes", new { PageNumber = i }, htmlAttributes: new { @class = "page-link" })
                            </li>
                        }
                    }

                    @if (ViewBag.PageNumber == totalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" aria-label="Next" href="@Url.Action("SearchNotes", new { PageNumber = ViewBag.PageNumber })">
                                <img src="~/Content/images/right-arrow.png" alt="right-arrow">
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item">
                            <a class="page-link" aria-label="Next" href="@Url.Action("SearchNotes", new { PageNumber = ViewBag.PageNumber + 1 })">
                                <img src="~/Content/images/right-arrow.png" alt="right-arrow">
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    }

</section>
<!-- End Search   -->

<script>
    var type, category, university, course, country, rating;

    function myFunc(obj) {

        var data = {};

        if (obj.id == "Type") {
            type = obj.value;
        }
        if (obj.id == "Category") {
            category = obj.value;
        }
        if (obj.id == "University") {
            university = obj.value;
        }
        if (obj.id == "Course") {
            course = obj.value;
        }
        if (obj.id == "Country") {
            country = obj.value;
        }
        if (obj.id == "Rating") {
            rating = obj.value;
        }


        if (type != null) {
            data.Type = type;
        }
        if (category != null) {
            data.Category = category;
        }
        if (university != null) {
            data.University = university;
        }
        if (course != null) {
            data.Course = course;
        }
        if (country != null) {
            data.Country = country;
        }
        if (rating != null) {
            data.Rating = rating;
        }

        console.log(data);

        $.ajax({
            method: 'GET',
            url: '',
            data: data,
            success: function (data) {
                document.body.innerHTML = data;
            },
            error: function () {
                alert("Try Again");
            }
        });
    }

    $('#Search').on('keypress', function (e) {
        if (e) {
            location.href = "SearchNotes?search=" + $(this).val();
        }
    });


    $('.card-title > a').click(function () {
        location.href = "NoteDetails/" + $(this).attr('noteId');
    });

    //function SearchNotes() {
    //    let input = document.getElementById('search').value
    //    input = input.toLowerCase();
    //    let x = document.getElementsByClassName('note-title');

    //    for (i = 0; i < x.length; i++) {
    //        if (!x[i].innerHTML.toLowerCase().includes(input)) {
    //            x[i].style.display = "none";
    //        }
    //        else {
    //            x[i].style.display = "list-item";
    //        }
    //    }
    //}

</script>